"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.assertPasswordSizeOk = exports.assertDataSizeOk = void 0;
const MAXIMUM_ALLOWED_DATA_SIZE_BYTES = 100 * 1024 * 1024; // 100 MB
const MAXIMUM_ALLOWED_PASSWORD_SIZE_BYTES = 10 * 1024; // 10 KB
function assertValidSize(array, size, name) {
    if (array.byteLength > size) {
        throw new Error(`Expected ${name} with at most ${size} bytes, got ${array.byteLength}`);
    }
}
function assertDataSizeOk(data) {
    assertValidSize(data, MAXIMUM_ALLOWED_DATA_SIZE_BYTES, 'data');
}
exports.assertDataSizeOk = assertDataSizeOk;
function assertPasswordSizeOk(password) {
    assertValidSize(password, MAXIMUM_ALLOWED_PASSWORD_SIZE_BYTES, 'password');
    if (password.byteLength === 0) {
        throw new Error('Unexpected empty password.');
    }
}
exports.assertPasswordSizeOk = assertPasswordSizeOk;
